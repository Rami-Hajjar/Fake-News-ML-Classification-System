# -*- coding: utf-8 -*-
"""Fake News ML

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zXOiIc22h6dOoNHMmgnf5phfg90wC0QH
"""

import numpy as np
import pandas as pd
import itertools
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import PassiveAggressiveClassifier
from sklearn.metrics import accuracy_score, confusion_matrix

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('True.csv')
df = pd.read_csv('Fake.csv')

df.shape

df.head()

# Load datasets separately
df_true = pd.read_csv('True.csv')
df_fake = pd.read_csv('Fake.csv')

# Add a 'label' column: 1 for True news, 0 for Fake news
df_true['label'] = 1
df_fake['label'] = 0

# Combine both datasets into one DataFrame
df = pd.concat([df_true, df_fake], axis=0).reset_index(drop=True)

# Check if 'label' exists now
print(df.columns)

# Train-test split
x_train, x_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.2, random_state=7)

print("Data split successful!")

tfidf_vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)

# Transform training and test data
tfidf_train = tfidf_vectorizer.fit_transform(x_train)
tfidf_test = tfidf_vectorizer.transform(x_test)

pac = PassiveAggressiveClassifier(max_iter=50)

pac.fit(tfidf_train, y_train)

y_pred = pac.predict(tfidf_test)

y_test

accuracy = accuracy_score(y_test, y_pred) * 100  # Convert to percentage
print(f"Accuracy: {accuracy:.2f}%")  # Display full accuracy with two decimal places

# Check unique values in y_test
print("Unique values in y_test:", set(y_test))

# Determine correct labels for confusion_matrix
if set(y_test) == {0, 1}:  # Numeric labels
    conf_matrix = confusion_matrix(y_test, y_pred, labels=[0, 1])
else:  # String labels
    conf_matrix = confusion_matrix(y_test, y_pred, labels=['FAKE', 'REAL'])

print(conf_matrix)